{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DJ\\\\ProyectBD\\\\frontend\\\\src\\\\Components\\\\InputProducto.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport \"../Styles/Inventario/inventario.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputProducto = () => {\n  _s();\n\n  const [nombre, setNombre] = useState(\"\");\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    const elem = window.localStorage.getItem(\"usuario\");\n    const dato = elem ? JSON.parse(elem) : null;\n\n    try {\n      const body = {\n        id_usuario: dato.id,\n        nombre: nombre,\n        precio: 1000,\n        descripcion: \"\",\n        categoria: \"\",\n        cantidad: 1\n      };\n      const response = await fetch(\"http://localhost:9000/addadmin\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response);\n      window.location = \"/productos\";\n    } catch (err) {\n      console.error(err.message);\n    }\n\n    const myFunction = async () => {\n      const {\n        value: formValues\n      } = await Swal.fire({\n        title: \"Multiple inputs\",\n        html: '<input id=\"swal-input1\" class=\"swal2-input\">' + '<input id=\"swal-input2\" class=\"swal2-input\">',\n        focusConfirm: false,\n        preConfirm: () => {\n          return [document.getElementById(\"swal-input1\").value, document.getElementById(\"swal-input2\").value];\n        }\n      });\n\n      if (formValues) {\n        Swal.fire(JSON.stringify(formValues));\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex mt-5\",\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputProduct\",\n          className: \"visually-hidden\",\n          children: \"Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          color: \"#FFFFFF\",\n          className: \"form-control\",\n          value: nombre,\n          onChange: e => setNombre(e.target.value),\n          id: \"inputProduct\",\n          placeholder: \"Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success \",\n        onclick: \"myFunction()\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputProducto, \"SHWuT2Tm+4tXLpxWoRY1cOB6HJ0=\");\n\n_c = InputProducto;\nexport default InputProducto;\n/* \r\n      <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>  \r\n      </form>\r\n      <input\r\n          type=\"text\"\r\n          className=\"form-group \"\r\n          value={nombre}\r\n          onChange={e => setNombre(e.target.value)}\r\n        />\r\n        <button className=\"btn btn-success\">Add</button>\r\n       <small id=\"emailHelp\" class=\"form-text text-muted\">Insert the product in your inventary.</small> */\n\nvar _c;\n\n$RefreshReg$(_c, \"InputProducto\");","map":{"version":3,"sources":["C:/Users/DJ/ProyectBD/frontend/src/Components/InputProducto.js"],"names":["React","Fragment","useState","Swal","InputProducto","nombre","setNombre","onSubmitForm","e","preventDefault","elem","window","localStorage","getItem","dato","JSON","parse","body","id_usuario","id","precio","descripcion","categoria","cantidad","response","fetch","method","headers","stringify","console","log","location","err","error","message","myFunction","value","formValues","fire","title","html","focusConfirm","preConfirm","document","getElementById","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,qCAAP;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMK,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,SAA5B,CAAb;AACA,UAAMC,IAAI,GAAGJ,IAAI,GAAGK,IAAI,CAACC,KAAL,CAAWN,IAAX,CAAH,GAAsB,IAAvC;;AAEA,QAAI;AACF,YAAMO,IAAI,GAAG;AACXC,QAAAA,UAAU,EAAEJ,IAAI,CAACK,EADN;AAEXd,QAAAA,MAAM,EAAEA,MAFG;AAGXe,QAAAA,MAAM,EAAE,IAHG;AAIXC,QAAAA,WAAW,EAAE,EAJF;AAKXC,QAAAA,SAAS,EAAE,EALA;AAMXC,QAAAA,QAAQ,EAAE;AANC,OAAb;AASA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,QAAAA,MAAM,EAAE,MADqD;AAE7DC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFoD;AAG7DV,QAAAA,IAAI,EAAEF,IAAI,CAACa,SAAL,CAAeX,IAAf;AAHuD,OAAnC,CAA5B;AAMAY,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEAb,MAAAA,MAAM,CAACoB,QAAP,GAAkB,YAAlB;AACD,KAnBD,CAmBE,OAAOC,GAAP,EAAY;AACZH,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACD;;AACD,UAAMC,UAAU,GAAG,YAAY;AAC7B,YAAM;AAAEC,QAAAA,KAAK,EAAEC;AAAT,UAAwB,MAAMlC,IAAI,CAACmC,IAAL,CAAU;AAC5CC,QAAAA,KAAK,EAAE,iBADqC;AAE5CC,QAAAA,IAAI,EACF,iDACA,8CAJ0C;AAK5CC,QAAAA,YAAY,EAAE,KAL8B;AAM5CC,QAAAA,UAAU,EAAE,MAAM;AAChB,iBAAO,CACLC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCR,KADlC,EAELO,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCR,KAFlC,CAAP;AAID;AAX2C,OAAV,CAApC;;AAcA,UAAIC,UAAJ,EAAgB;AACdlC,QAAAA,IAAI,CAACmC,IAAL,CAAUvB,IAAI,CAACa,SAAL,CAAeS,UAAf,CAAV;AACD;AACF,KAlBD;AAmBD,GA/CD;;AAiDA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAE9B,YAAxC;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,cAAf;AAA8B,UAAA,SAAS,EAAC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,SAAS,EAAC,cAHZ;AAIE,UAAA,KAAK,EAAEF,MAJT;AAKE,UAAA,QAAQ,EAAGG,CAAD,IAAOF,SAAS,CAACE,CAAC,CAACqC,MAAF,CAAST,KAAV,CAL5B;AAME,UAAA,EAAE,EAAC,cANL;AAOE,UAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAiBE;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAC,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA7ED;;GAAMhC,a;;KAAAA,a;AA+EN,eAAeA,aAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../Styles/Inventario/inventario.css\";\r\n\r\nconst InputProducto = () => {\r\n  const [nombre, setNombre] = useState(\"\");\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const elem = window.localStorage.getItem(\"usuario\");\r\n    const dato = elem ? JSON.parse(elem) : null;\r\n\r\n    try {\r\n      const body = {\r\n        id_usuario: dato.id,\r\n        nombre: nombre,\r\n        precio: 1000,\r\n        descripcion: \"\",\r\n        categoria: \"\",\r\n        cantidad: 1,\r\n      };\r\n\r\n      const response = await fetch(\"http://localhost:9000/addadmin\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      console.log(response);\r\n\r\n      window.location = \"/productos\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n    const myFunction = async () => {\r\n      const { value: formValues } = await Swal.fire({\r\n        title: \"Multiple inputs\",\r\n        html:\r\n          '<input id=\"swal-input1\" class=\"swal2-input\">' +\r\n          '<input id=\"swal-input2\" class=\"swal2-input\">',\r\n        focusConfirm: false,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById(\"swal-input1\").value,\r\n            document.getElementById(\"swal-input2\").value,\r\n          ];\r\n        },\r\n      });\r\n\r\n      if (formValues) {\r\n        Swal.fire(JSON.stringify(formValues));\r\n      }\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n        {\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"inputProduct\" className=\"visually-hidden\">\r\n              Product\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              color=\"#FFFFFF\"\r\n              className=\"form-control\"\r\n              value={nombre}\r\n              onChange={(e) => setNombre(e.target.value)}\r\n              id=\"inputProduct\"\r\n              placeholder=\"Product\"\r\n            />\r\n          </div>\r\n        }\r\n        <button className=\"btn btn-success \" onclick=\"myFunction()\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InputProducto;\r\n\r\n/* \r\n      <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>  \r\n      </form>\r\n      <input\r\n          type=\"text\"\r\n          className=\"form-group \"\r\n          value={nombre}\r\n          onChange={e => setNombre(e.target.value)}\r\n        />\r\n        <button className=\"btn btn-success\">Add</button>\r\n       <small id=\"emailHelp\" class=\"form-text text-muted\">Insert the product in your inventary.</small> */\r\n"]},"metadata":{},"sourceType":"module"}