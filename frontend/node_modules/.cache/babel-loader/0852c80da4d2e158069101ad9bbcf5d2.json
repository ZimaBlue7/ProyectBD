{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camil\\\\Documents\\\\ProyectBD\\\\frontend\\\\src\\\\Components\\\\EditAdmin.js\";\nimport React, { Fragment, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst editAdmin = async () => {\n  const {\n    value: formValues\n  } = await Swal.fire({\n    title: \"Editar administrador\",\n    html: '<input id=\"swal-input1\" placeholder=\"Identificación\" class=\"swal2-input\">' + '<input id=\"swal-input2\" placeholder=\"Nombre\" class=\"swal2-input\">' + '<input id=\"swal-input3\" type = \"password\" placeholder=\"Password\" class=\"swal2-input\">' + '<input id=\"swal-input4\" placeholder=\"Email\" class=\"swal2-input\">' + '<input id=\"swal-input5\" placeholder=\"Description\" class=\"swal2-input\">',\n    focusConfirm: false,\n    preConfirm: () => {\n      return [document.getElementById(\"swal-input1\").value, document.getElementById(\"swal-input2\").value, document.getElementById(\"swal-input3\").value, document.getElementById(\"swal-input4\").value, document.getElementById(\"swal-input5\").value];\n    }\n  });\n\n  if (formValues) {\n    Swal.fire('Datos ingresados');\n\n    try {\n      const data = {\n        identificacion: formValues[0],\n        nombre: formValues[1],\n        password: formValues[2],\n        email: formValues[3],\n        description: formValues[4]\n      };\n      const response = await fetch('https://attendancjyc-backend.herokuapp.com/administrador/', {\n        method: 'POST',\n        // or 'PUT'\n        body: JSON.stringify(data),\n        // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.json) {\n        Swal.fire('Administrador agregado con Exito');\n      } else {\n        Swal.fire('Administrador no pudo ser agregado');\n      }\n    } catch (e) {}\n  }\n};\n\nconst EditAdmin = props => {\n  const updateNombre = async e => {\n    e.preventDefault();\n\n    try {\n      const body = {\n        nombre: nombre,\n        precio: props.todo.precio,\n        descripcion: props.todo.descripcion,\n        categoria: props.todo.categoria,\n        cantidad: props.todo.cantidad_exitente_producto\n      };\n      console.log(body);\n      await fetch(`https://provo-backend.herokuapp.com/productos/${props.todo.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }).then(() => {\n        window.location = \"/admin\";\n      }); //\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": `#id${props.todo.id}`,\n      onClick: editAdmin,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditAdmin;\nexport default EditAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAdmin\");","map":{"version":3,"sources":["C:/Users/camil/Documents/ProyectBD/frontend/src/Components/EditAdmin.js"],"names":["React","Fragment","useState","Swal","editAdmin","value","formValues","fire","title","html","focusConfirm","preConfirm","document","getElementById","data","identificacion","nombre","password","email","description","response","fetch","method","body","JSON","stringify","headers","json","e","EditAdmin","props","updateNombre","preventDefault","precio","todo","descripcion","categoria","cantidad","cantidad_exitente_producto","console","log","id","then","window","location","err","error","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,MAAMC,SAAS,GAAG,YAAY;AAC5B,QAAM;AAAEC,IAAAA,KAAK,EAAEC;AAAT,MAAwB,MAAMH,IAAI,CAACI,IAAL,CAAU;AAC5CC,IAAAA,KAAK,EAAE,sBADqC;AAE5CC,IAAAA,IAAI,EACF,8EACA,mEADA,GAEA,uFAFA,GAGA,kEAHA,GAIA,wEAP0C;AAQ5CC,IAAAA,YAAY,EAAE,KAR8B;AAS5CC,IAAAA,UAAU,EAAE,MAAM;AAChB,aAAO,CACLC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCR,KADlC,EAELO,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCR,KAFlC,EAGLO,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCR,KAHlC,EAILO,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCR,KAJlC,EAKLO,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCR,KALlC,CAAP;AAOD;AAjB2C,GAAV,CAApC;;AAoBA,MAAIC,UAAJ,EAAgB;AACdH,IAAAA,IAAI,CAACI,IAAL,CAAU,kBAAV;;AACA,QAAI;AAEF,YAAMO,IAAI,GAAG;AACXC,QAAAA,cAAc,EAAET,UAAU,CAAC,CAAD,CADf;AAEXU,QAAAA,MAAM,EAAEV,UAAU,CAAC,CAAD,CAFP;AAGXW,QAAAA,QAAQ,EAAEX,UAAU,CAAC,CAAD,CAHT;AAIXY,QAAAA,KAAK,EAAEZ,UAAU,CAAC,CAAD,CAJN;AAKXa,QAAAA,WAAW,EAAEb,UAAU,CAAC,CAAD;AALZ,OAAb;AAQA,YAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,2DAAD,EAA8D;AACxFC,QAAAA,MAAM,EAAE,MADgF;AACxE;AAChBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAFkF;AAE5D;AAC5BY,QAAAA,OAAO,EAAC;AACN,0BAAgB;AADV;AAHgF,OAA9D,CAA5B;;AAQA,UAAGN,QAAQ,CAACO,IAAZ,EAAiB;AACfxB,QAAAA,IAAI,CAACI,IAAL,CAAU,kCAAV;AACD,OAFD,MAGI;AACFJ,QAAAA,IAAI,CAACI,IAAL,CAAU,oCAAV;AACD;AAEF,KAzBD,CAyBE,OAAOqB,CAAP,EAAU,CAEX;AACF;AACF,CApDD;;AAuDA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAG3B,QAAMC,YAAY,GAAE,MAAMH,CAAN,IAAW;AAC7BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAI;AACF,YAAMT,IAAI,GAAG;AACXP,QAAAA,MAAM,EAAEA,MADG;AAEXiB,QAAAA,MAAM,EAAEH,KAAK,CAACI,IAAN,CAAWD,MAFR;AAGXE,QAAAA,WAAW,EAAEL,KAAK,CAACI,IAAN,CAAWC,WAHb;AAIXC,QAAAA,SAAS,EAAEN,KAAK,CAACI,IAAN,CAAWE,SAJX;AAKXC,QAAAA,QAAQ,EAAEP,KAAK,CAACI,IAAN,CAAWI;AALV,OAAb;AAOAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACA,YAAMF,KAAK,CACR,iDAAgDS,KAAK,CAACI,IAAN,CAAWO,EAAG,EADtD,EAET;AACEnB,QAAAA,MAAM,EAAE,KADV;AAEEI,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFX;AAGEH,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHR,OAFS,CAAL,CAOJmB,IAPI,CAOC,MAAM;AACXC,QAAAA,MAAM,CAACC,QAAP,GAAkB,QAAlB;AACD,OATK,CAAN,CATE,CAoBF;AACD,KArBD,CAqBE,OAAOC,GAAP,EAAY;AACZN,MAAAA,OAAO,CAACO,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACD;AACF,GA1BD;;AA4BA,sBACE,QAAC,QAAD;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,qBAAY,OAHd;AAIE,qBAAc,MAAKjB,KAAK,CAACI,IAAN,CAAWO,EAAG,EAJnC;AAKE,MAAA,OAAO,EAAErC,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA7CD;;KAAMyB,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst editAdmin = async () => {\r\n  const { value: formValues } = await Swal.fire({\r\n    title: \"Editar administrador\",\r\n    html:\r\n      '<input id=\"swal-input1\" placeholder=\"Identificación\" class=\"swal2-input\">' +\r\n      '<input id=\"swal-input2\" placeholder=\"Nombre\" class=\"swal2-input\">' +\r\n      '<input id=\"swal-input3\" type = \"password\" placeholder=\"Password\" class=\"swal2-input\">' +\r\n      '<input id=\"swal-input4\" placeholder=\"Email\" class=\"swal2-input\">' +\r\n      '<input id=\"swal-input5\" placeholder=\"Description\" class=\"swal2-input\">',\r\n    focusConfirm: false,\r\n    preConfirm: () => {\r\n      return [\r\n        document.getElementById(\"swal-input1\").value,\r\n        document.getElementById(\"swal-input2\").value,\r\n        document.getElementById(\"swal-input3\").value,\r\n        document.getElementById(\"swal-input4\").value,\r\n        document.getElementById(\"swal-input5\").value\r\n      ];\r\n    },\r\n  });\r\n\r\n  if (formValues) {\r\n    Swal.fire('Datos ingresados');\r\n    try {\r\n\r\n      const data = {\r\n        identificacion: formValues[0], \r\n        nombre: formValues[1], \r\n        password: formValues[2], \r\n        email: formValues[3], \r\n        description: formValues[4]\r\n      }\r\n\r\n      const response = await fetch('https://attendancjyc-backend.herokuapp.com/administrador/', {\r\n        method: 'POST', // or 'PUT'\r\n        body: JSON.stringify(data), // data can be `string` or {object}!\r\n        headers:{\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if(response.json){\r\n        Swal.fire('Administrador agregado con Exito');\r\n      }\r\n      else{\r\n        Swal.fire('Administrador no pudo ser agregado');\r\n      }\r\n\r\n    } catch (e) {\r\n      \r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst EditAdmin = (props) => {\r\n        \r\n  \r\n  const updateNombre= async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = {\r\n        nombre: nombre,\r\n        precio: props.todo.precio, \r\n        descripcion: props.todo.descripcion, \r\n        categoria: props.todo.categoria, \r\n        cantidad: props.todo.cantidad_exitente_producto\r\n      };\r\n      console.log(body)\r\n      await fetch(\r\n        `https://provo-backend.herokuapp.com/productos/${props.todo.id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body)\r\n        }\r\n      ).then(() => {\r\n        window.location = \"/admin\";\r\n      });\r\n\r\n      //\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-warning\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${props.todo.id}`}\r\n        onClick={editAdmin}\r\n      >\r\n        Edit\r\n      </button>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditAdmin;"]},"metadata":{},"sourceType":"module"}