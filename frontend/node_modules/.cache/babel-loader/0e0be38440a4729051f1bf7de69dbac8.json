{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camil\\\\Documents\\\\ProyectBD\\\\frontend\\\\src\\\\Components\\\\ListStudents.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport AddCourse from \"./AddCourse\";\nimport EditStudent from \"./EditStudent\";\nimport styledt from 'styled-components';\nimport image from \"../Images/fondo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TITLE = 'Agregar estudiante';\nconst StyledBody = styledt.div`\n  background: url(${image});  \n  background-size: cover;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n`;\n_c = StyledBody;\n\nconst ListStudents = () => {\n  _s();\n\n  const [student, setStudent] = useState([]);\n\n  const deleteCourse = async id => {\n    try {\n      await fetch('https://attendancjyc-backend.herokuapp.com/student/' + id, {\n        method: \"DELETE\"\n      }).then(() => {\n        setStudent(student.filter(student => student.id !== id));\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getStudent = async () => {\n    try {\n      const response = await fetch(`https://attendancjyc-backend.herokuapp.com/student/`);\n      const jsonData = await response.json();\n      setStudent(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getStudent();\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledBody, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Codigo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Semestre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Programa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: student.map(students => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: students.code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: students.semester\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: students.programa\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(EditStudent, {\n              todo: students\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteCourse(students.id),\n              children: \"Eliminar curso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, students.code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListStudents, \"1N9kYI2/3YzNL9G+rTVm4l+ZNqI=\");\n\n_c2 = ListStudents;\nexport default ListStudents;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledBody\");\n$RefreshReg$(_c2, \"ListStudents\");","map":{"version":3,"sources":["C:/Users/camil/Documents/ProyectBD/frontend/src/Components/ListStudents.js"],"names":["React","Fragment","useEffect","useState","AddCourse","EditStudent","styledt","image","TITLE","StyledBody","div","ListStudents","student","setStudent","deleteCourse","id","fetch","method","then","filter","err","console","error","message","getStudent","response","jsonData","json","map","students","code","semester","programa"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport AddCourse from \"./AddCourse\";\r\nimport EditStudent from \"./EditStudent\";\r\nimport styledt from 'styled-components';\r\nimport image from \"../Images/fondo.png\";\r\nconst TITLE = 'Agregar estudiante'\r\n\r\nconst StyledBody = styledt.div`\r\n  background: url(${image});  \r\n  background-size: cover;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst ListStudents = () => {\r\n  const [student, setStudent] = useState([]);\r\n\r\n  const deleteCourse = async (id) => {\r\n    try {\r\n      await fetch('https://attendancjyc-backend.herokuapp.com/student/' + id, {\r\n        method: \"DELETE\",\r\n      }).then(() => {\r\n        setStudent(student.filter((student) => student.id !== id));\r\n      });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const getStudent = async () => {\r\n    try {\r\n      const response = await fetch(`https://attendancjyc-backend.herokuapp.com/student/`);\r\n      const jsonData = await response.json();\r\n      setStudent(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStudent();\r\n  });\r\n\r\n  return (\r\n  \r\n    <Fragment>\r\n      <StyledBody/>\r\n      <table className=\"table mt-5 text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>Codigo</th>\r\n            <th>Semestre</th>\r\n            <th>Programa</th>\r\n            <th>Editar</th>\r\n            <th>Eliminar</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {student.map((students) => (\r\n            <tr key={students.code}>\r\n              <td>{students.code}</td>\r\n              <td>{students.semester}</td>\r\n              <td>{students.programa}</td>\r\n              <td>\r\n              <EditStudent todo={students} />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => deleteCourse(students.id)}\r\n                >\r\n                  Eliminar curso\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListStudents;\r\n"]},"metadata":{},"sourceType":"module"}