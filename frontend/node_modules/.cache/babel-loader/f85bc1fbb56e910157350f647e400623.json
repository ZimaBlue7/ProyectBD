{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camil\\\\Documents\\\\ProyectBD\\\\frontend\\\\src\\\\Components\\\\AddStaff.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport Fab from '@mui/material/Fab';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from '@material-ui/icons/Add';\nimport HomeIcon from '@mui/icons-material/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  wrapIcon: {\n    alignItems: \"center\"\n  }\n}));\n\nconst home = () => {\n  window.location = \"/staff\";\n};\n\nconst addingStaff = async () => {\n  const {\n    value: formValues\n  } = await Swal.fire({\n    title: \"Agrega un staff\",\n    html: '<input id=\"swal-input1\" placeholder=\"Identificación\" class=\"swal2-input\">' + '<input id=\"swal-input2\" placeholder=\"Nombre\" class=\"swal2-input\">' + '<input id=\"swal-input3\" type = \"password\" placeholder=\"Password\" class=\"swal2-input\">' + '<input id=\"swal-input4\" placeholder=\"Email\" class=\"swal2-input\">' + '<input id=\"swal-input5\" placeholder=\"Especialidad\" class=\"swal2-input\">',\n    focusConfirm: false,\n    preConfirm: () => {\n      return [document.getElementById(\"swal-input1\").value, document.getElementById(\"swal-input2\").value, document.getElementById(\"swal-input3\").value, document.getElementById(\"swal-input4\").value, document.getElementById(\"swal-input5\").value];\n    }\n  });\n\n  if (formValues) {\n    Swal.fire('Datos ingresados');\n\n    try {\n      const data = {\n        identificacion: formValues[0],\n        nombre: formValues[1],\n        password: formValues[2],\n        email: formValues[3],\n        description: 'Profesor',\n        especialidad: formValues[4]\n      };\n      const response = await fetch('https://attendancjyc-backend.herokuapp.com/administrador/', {\n        method: 'POST',\n        // or 'PUT'\n        body: JSON.stringify(data),\n        // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.json) {\n        Swal.fire('Personal agregado con Exito');\n      }\n\n      if (formValues[0] === \"\" || formValues[1] === \"\" || formValues[2] === null || formValues[3] === \"\") {\n        Swal.fire('Personal no pudo ser agregado');\n      }\n    } catch (e) {}\n  }\n};\n\nconst addStaff = () => {\n  _s();\n\n  const [nombre, setNombre] = useState(\"\");\n  const classes = useStyles();\n  const Wrapper = Fragment;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Fab, {\n      color: \"secondary\",\n      \"aria-label\": \"add\",\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {\n        onClick: addingStaff\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fab, {\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(HomeIcon, {\n        onClick: home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(addStaff, \"K8KwPkKc46ImwhJvZaO/B4//cPM=\", false, function () {\n  return [useStyles];\n});\n\nexport default addStaff;","map":{"version":3,"sources":["C:/Users/camil/Documents/ProyectBD/frontend/src/Components/AddStaff.js"],"names":["React","Fragment","useState","Swal","Fab","makeStyles","AddIcon","HomeIcon","useStyles","wrapIcon","alignItems","home","window","location","addingStaff","value","formValues","fire","title","html","focusConfirm","preConfirm","document","getElementById","data","identificacion","nombre","password","email","description","especialidad","response","fetch","method","body","JSON","stringify","headers","json","e","addStaff","setNombre","classes","Wrapper"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport Fab from '@mui/material/Fab';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nconst useStyles = makeStyles(() => ({\r\n  wrapIcon: {\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n\r\nconst home = () =>{\r\n  window.location = \"/staff\";\r\n}\r\n\r\nconst addingStaff = async () => {\r\n  const { value: formValues } = await Swal.fire({\r\n    title: \"Agrega un staff\",\r\n    html:\r\n      '<input id=\"swal-input1\" placeholder=\"Identificación\" class=\"swal2-input\">' +\r\n      '<input id=\"swal-input2\" placeholder=\"Nombre\" class=\"swal2-input\">' +\r\n      '<input id=\"swal-input3\" type = \"password\" placeholder=\"Password\" class=\"swal2-input\">' +\r\n      '<input id=\"swal-input4\" placeholder=\"Email\" class=\"swal2-input\">'+\r\n      '<input id=\"swal-input5\" placeholder=\"Especialidad\" class=\"swal2-input\">',\r\n    focusConfirm: false,\r\n    preConfirm: () => {\r\n      return [\r\n        document.getElementById(\"swal-input1\").value,\r\n        document.getElementById(\"swal-input2\").value,\r\n        document.getElementById(\"swal-input3\").value,\r\n        document.getElementById(\"swal-input4\").value,\r\n        document.getElementById(\"swal-input5\").value\r\n      ];\r\n    },\r\n  });\r\n\r\n  if (formValues) {\r\n    Swal.fire('Datos ingresados');\r\n    try {\r\n\r\n      const data = {\r\n        identificacion: formValues[0], \r\n        nombre: formValues[1], \r\n        password: formValues[2], \r\n        email: formValues[3], \r\n        description: 'Profesor',\r\n        especialidad: formValues[4], \r\n      }\r\n\r\n      const response = await fetch('https://attendancjyc-backend.herokuapp.com/administrador/', {\r\n        method: 'POST', // or 'PUT'\r\n        body: JSON.stringify(data), // data can be `string` or {object}!\r\n        headers:{\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if(response.json){\r\n        Swal.fire('Personal agregado con Exito');\r\n      }\r\n      if(formValues[0] === \"\" || formValues[1] === \"\" || formValues[2] === null || formValues[3] === \"\"){\r\n        Swal.fire('Personal no pudo ser agregado');\r\n      }\r\n\r\n    } catch (e) {\r\n      \r\n    }\r\n  }\r\n};\r\n\r\nconst addStaff = () => {\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const classes = useStyles();\r\n  \r\n  const Wrapper = Fragment;\r\n  return (\r\n    <Wrapper>\r\n      <Fab color=\"secondary\" aria-label=\"add\">\r\n        <AddIcon onClick={addingStaff}/>\r\n      </Fab>\r\n      <Fab color=\"primary\">\r\n      <HomeIcon onClick={home}/>\r\n      </Fab>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default addStaff;\r\n              "]},"metadata":{},"sourceType":"module"}