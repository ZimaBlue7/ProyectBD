{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camil\\\\Documents\\\\ProyectBD\\\\frontend\\\\src\\\\Components\\\\EditStudent.js\";\nimport React, { Fragment, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst editStudent = async (id, datos) => {\n  const {\n    value: formValues\n  } = await Swal.fire({\n    title: \"Editar estudiante\",\n    html: '<input id=\"swal-input2\" placeholder=\"Programa\" class=\"swal2-input\">' + '<input id=\"swal-input3\" type = \"Semestre\" placeholder=\"Password\" class=\"swal2-input\">',\n    focusConfirm: false,\n    preConfirm: () => {\n      return [document.getElementById(\"swal-input2\").value, document.getElementById(\"swal-input3\").value];\n    }\n  });\n\n  if (formValues) {\n    Swal.fire('Datos ingresados');\n\n    try {\n      const data = {\n        programa: formValues[0] ? formValues[0] : datos.programa,\n        semester: formValues[1] ? formValues[1] : datos.semester\n      };\n      const response = await fetch('https://attendancjyc-backend.herokuapp.com/students/' + id, {\n        method: 'PUT',\n        body: JSON.stringify(data),\n        // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.json) {\n        Swal.fire('Estudiante actualizado con Exito');\n      } else {\n        Swal.fire('Estudiante no pudo ser actualizado');\n      }\n    } catch (e) {}\n  }\n};\n\nconst EditStudent = props => {\n  const Wrapper = Fragment;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": `#id${props.todo.id}`,\n      onClick: () => {\n        editStudent(props.todo.id, props.todo);\n      },\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditStudent;\nexport default EditStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditStudent\");","map":{"version":3,"sources":["C:/Users/camil/Documents/ProyectBD/frontend/src/Components/EditStudent.js"],"names":["React","Fragment","useState","Swal","editStudent","id","datos","value","formValues","fire","title","html","focusConfirm","preConfirm","document","getElementById","data","programa","semester","response","fetch","method","body","JSON","stringify","headers","json","e","EditStudent","props","Wrapper","todo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,MAAMC,WAAW,GAAG,OAAQC,EAAR,EAAYC,KAAZ,KAAuB;AACzC,QAAM;AAAEC,IAAAA,KAAK,EAAEC;AAAT,MAAwB,MAAML,IAAI,CAACM,IAAL,CAAU;AAC5CC,IAAAA,KAAK,EAAE,mBADqC;AAE5CC,IAAAA,IAAI,EACF,wEACA,uFAJ0C;AAK5CC,IAAAA,YAAY,EAAE,KAL8B;AAM5CC,IAAAA,UAAU,EAAE,MAAM;AAChB,aAAO,CACLC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCR,KADlC,EAELO,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCR,KAFlC,CAAP;AAID;AAX2C,GAAV,CAApC;;AAcA,MAAIC,UAAJ,EAAgB;AACdL,IAAAA,IAAI,CAACM,IAAL,CAAU,kBAAV;;AACA,QAAI;AAEF,YAAMO,IAAI,GAAG;AACXC,QAAAA,QAAQ,EAAET,UAAU,CAAC,CAAD,CAAV,GAAgBA,UAAU,CAAC,CAAD,CAA1B,GAAgCF,KAAK,CAACW,QADrC;AAEXC,QAAAA,QAAQ,EAAEV,UAAU,CAAC,CAAD,CAAV,GAAgBA,UAAU,CAAC,CAAD,CAA1B,GAAgCF,KAAK,CAACY;AAFrC,OAAb;AAKA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAuDf,EAAxD,EAA4D;AACtFgB,QAAAA,MAAM,EAAE,KAD8E;AAEtFC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAFgF;AAE1D;AAC5BS,QAAAA,OAAO,EAAC;AACN,0BAAgB;AADV;AAH8E,OAA5D,CAA5B;;AAQA,UAAGN,QAAQ,CAACO,IAAZ,EAAiB;AACfvB,QAAAA,IAAI,CAACM,IAAL,CAAU,kCAAV;AACD,OAFD,MAGI;AACFN,QAAAA,IAAI,CAACM,IAAL,CAAU,oCAAV;AACD;AAEF,KAtBD,CAsBE,OAAOkB,CAAP,EAAU,CAEX;AACF;AACF,CA3CD;;AA8CA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,OAAO,GAAG7B,QAAhB;AACA,sBACE,QAAC,OAAD;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,qBAAY,OAHd;AAIE,qBAAc,MAAK4B,KAAK,CAACE,IAAN,CAAW1B,EAAG,EAJnC;AAKE,MAAA,OAAO,EAAG,MAAM;AAAED,QAAAA,WAAW,CAACyB,KAAK,CAACE,IAAN,CAAW1B,EAAZ,EAAgBwB,KAAK,CAACE,IAAtB,CAAX;AAAwC,OAL5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBD;;KAAMH,W;AAkBN,eAAeA,WAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst editStudent = async ( id, datos ) => {\r\n  const { value: formValues } = await Swal.fire({\r\n    title: \"Editar estudiante\",\r\n    html:\r\n      '<input id=\"swal-input2\" placeholder=\"Programa\" class=\"swal2-input\">' +\r\n      '<input id=\"swal-input3\" type = \"Semestre\" placeholder=\"Password\" class=\"swal2-input\">' ,\r\n    focusConfirm: false,\r\n    preConfirm: () => {\r\n      return [\r\n        document.getElementById(\"swal-input2\").value,\r\n        document.getElementById(\"swal-input3\").value\r\n      ];\r\n    },\r\n  });\r\n\r\n  if (formValues) {\r\n    Swal.fire('Datos ingresados');\r\n    try {\r\n\r\n      const data = {\r\n        programa: formValues[0] ? formValues[0] : datos.programa, \r\n        semester: formValues[1] ? formValues[1] : datos.semester,\r\n      }\r\n\r\n      const response = await fetch('https://attendancjyc-backend.herokuapp.com/students/'+id, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(data), // data can be `string` or {object}!\r\n        headers:{\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if(response.json){\r\n        Swal.fire('Estudiante actualizado con Exito');\r\n      }\r\n      else{\r\n        Swal.fire('Estudiante no pudo ser actualizado');\r\n      }\r\n\r\n    } catch (e) {\r\n      \r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst EditStudent = (props) => {\r\n  const Wrapper = Fragment;\r\n  return (\r\n    <Wrapper>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-warning\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${props.todo.id}`}\r\n        onClick={ () => { editStudent(props.todo.id, props.todo) }}\r\n      >\r\n        Edit\r\n      </button>\r\n\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default EditStudent;"]},"metadata":{},"sourceType":"module"}