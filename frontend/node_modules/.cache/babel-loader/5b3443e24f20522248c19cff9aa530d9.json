{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camil\\\\Documents\\\\ProyectBD\\\\frontend\\\\src\\\\Components\\\\AddAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport \"../Styles/Inventario/inventario.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst myFunction = async () => {\n  const {\n    value: formValues\n  } = await Swal.fire({\n    title: \"Multiple inputs\",\n    html: '<input id=\"swal-input1\" placeholder=\"Identificación\" class=\"swal2-input\">' + '<input id=\"swal-input2\" placeholder=\"Nombre\" class=\"swal2-input\">' + '<input id=\"swal-input3\" input: \"password\" placeholder=\"Password\" class=\"swal2-input\">' + '<input id=\"swal-input4\" placeholder=\"Email\" class=\"swal2-input\">' + '<input id=\"swal-input5\" placeholder=\"Description\" class=\"swal2-input\">',\n    focusConfirm: false,\n    preConfirm: () => {\n      return [document.getElementById(\"swal-input1\").value, document.getElementById(\"swal-input2\").value, document.getElementById(\"swal-input3\").value, document.getElementById(\"swal-input4\").value, document.getElementById(\"swal-input5\").value];\n    }\n  });\n\n  if (formValues) {\n    Swal.fire('Datos ingresados');\n\n    try {\n      const data = {\n        identificacion: formValues[0],\n        nombre: formValues[1],\n        password: formValues[2],\n        email: formValues[3],\n        description: formValues[4]\n      };\n      const response = await fetch('https://attendancjyc-backend.herokuapp.com/admin/', {\n        method: 'POST',\n        // or 'PUT'\n        body: JSON.stringify(data),\n        // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.json) {\n        Swal.fire('Administrador agregado con Exito');\n      } else {\n        Swal.fire('Administrador no pudo ser agregado');\n      }\n    } catch (e) {}\n  }\n};\n\nconst AddAdmin = () => {\n  _s();\n\n  const [nombre, setNombre] = useState(\"\");\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    const elem = window.localStorage.getItem(\"usuario\");\n    const dato = elem ? JSON.parse(elem) : null;\n\n    try {\n      const body = {\n        id_usuario: dato.id,\n        nombre: nombre\n      };\n      console.log(\" name \", nombre);\n      const response = await fetch(\"http://localhost:4000/adadmin\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response);\n      window.location = \"/admin\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex justify-content-center\",\n      onSubmit: onSubmitForm,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-primary btn-lg\",\n        onClick: myFunction,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddAdmin, \"SHWuT2Tm+4tXLpxWoRY1cOB6HJ0=\");\n\n_c = AddAdmin;\nexport default AddAdmin;\n/* \r\n      <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>  \r\n      </form>\r\n      <input\r\n          type=\"text\"\r\n          className=\"form-group \"\r\n          value={nombre}\r\n          onChange={e => setNombre(e.target.value)}\r\n        />\r\n        <button className=\"btn btn-success\">Add</button>\r\n       <small id=\"emailHelp\" class=\"form-text text-muted\">Insert the product in your inventary.</small> */\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAdmin\");","map":{"version":3,"sources":["C:/Users/camil/Documents/ProyectBD/frontend/src/Components/AddAdmin.js"],"names":["React","Fragment","useState","Swal","myFunction","value","formValues","fire","title","html","focusConfirm","preConfirm","document","getElementById","data","identificacion","nombre","password","email","description","response","fetch","method","body","JSON","stringify","headers","json","e","AddAdmin","setNombre","onSubmitForm","preventDefault","elem","window","localStorage","getItem","dato","parse","id_usuario","id","console","log","location","err","error","message"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../Styles/Inventario/inventario.css\";\r\n\r\nconst myFunction = async () => {\r\n  const { value: formValues } = await Swal.fire({\r\n    title: \"Multiple inputs\",\r\n    html:\r\n      '<input id=\"swal-input1\" placeholder=\"Identificación\" class=\"swal2-input\">' +\r\n      '<input id=\"swal-input2\" placeholder=\"Nombre\" class=\"swal2-input\">' +\r\n      '<input id=\"swal-input3\" input: \"password\" placeholder=\"Password\" class=\"swal2-input\">' +\r\n      '<input id=\"swal-input4\" placeholder=\"Email\" class=\"swal2-input\">' +\r\n      '<input id=\"swal-input5\" placeholder=\"Description\" class=\"swal2-input\">',\r\n    focusConfirm: false,\r\n    preConfirm: () => {\r\n      return [\r\n        document.getElementById(\"swal-input1\").value,\r\n        document.getElementById(\"swal-input2\").value,\r\n        document.getElementById(\"swal-input3\").value,\r\n        document.getElementById(\"swal-input4\").value,\r\n        document.getElementById(\"swal-input5\").value\r\n      ];\r\n    },\r\n  });\r\n\r\n  if (formValues) {\r\n    Swal.fire('Datos ingresados');\r\n    try {\r\n\r\n      const data = {\r\n        identificacion: formValues[0], \r\n        nombre: formValues[1], \r\n        password: formValues[2], \r\n        email: formValues[3], \r\n        description: formValues[4]\r\n      }\r\n\r\n      const response = await fetch('https://attendancjyc-backend.herokuapp.com/admin/', {\r\n        method: 'POST', // or 'PUT'\r\n        body: JSON.stringify(data), // data can be `string` or {object}!\r\n        headers:{\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if(response.json){\r\n        Swal.fire('Administrador agregado con Exito');\r\n      }\r\n      else{\r\n        Swal.fire('Administrador no pudo ser agregado');\r\n      }\r\n\r\n    } catch (e) {\r\n      \r\n    }\r\n  }\r\n};\r\n\r\nconst AddAdmin = () => {\r\n  const [nombre, setNombre] = useState(\"\");\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const elem = window.localStorage.getItem(\"usuario\");\r\n    const dato = elem ? JSON.parse(elem) : null;\r\n\r\n    try {\r\n      const body = {\r\n        id_usuario: dato.id,\r\n        nombre: nombre,\r\n      };\r\n      console.log(\" name \", nombre);\r\n      const response = await fetch(\"http://localhost:4000/adadmin\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      console.log(response);\r\n\r\n      window.location = \"/admin\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form className=\"d-flex justify-content-center\" onSubmit={onSubmitForm}>\r\n        <button class=\"btn btn-primary btn-lg\" onClick={myFunction}>\r\n          Add\r\n        </button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddAdmin;\r\n\r\n/* \r\n      <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>  \r\n      </form>\r\n      <input\r\n          type=\"text\"\r\n          className=\"form-group \"\r\n          value={nombre}\r\n          onChange={e => setNombre(e.target.value)}\r\n        />\r\n        <button className=\"btn btn-success\">Add</button>\r\n       <small id=\"emailHelp\" class=\"form-text text-muted\">Insert the product in your inventary.</small> */\r\n"]},"metadata":{},"sourceType":"module"}