[{"C:\\Users\\DJ\\ProyectBD\\frontend\\src\\index.js":"1","C:\\Users\\DJ\\ProyectBD\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Pages\\Login.js":"3","C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Pages\\Staff.js":"4","C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Pages\\Admin.js":"5","C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Pages\\Students.js":"6","C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Components\\ListProducto.js":"7","C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Components\\InputProducto.js":"8","C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Components\\EditProducto.js":"9"},{"size":957,"mtime":1647566542339,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1647566542340,"results":"12","hashOfConfig":"11"},{"size":4490,"mtime":1647566542336,"results":"13","hashOfConfig":"11"},{"size":6596,"mtime":1647566542336,"results":"14","hashOfConfig":"11"},{"size":7067,"mtime":1647566542335,"results":"15","hashOfConfig":"11"},{"size":7434,"mtime":1647566542336,"results":"16","hashOfConfig":"11"},{"size":2010,"mtime":1647579016441,"results":"17","hashOfConfig":"11"},{"size":2607,"mtime":1647579234758,"results":"18","hashOfConfig":"11"},{"size":3028,"mtime":1647566542112,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1aonmt5",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"C:\\Users\\DJ\\ProyectBD\\frontend\\src\\index.js",[],[],["51","52"],"C:\\Users\\DJ\\ProyectBD\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Pages\\Login.js",[],[],"C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Pages\\Staff.js",["53","54"],[],"\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport React, { useState } from 'react';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\r\nimport ContactSupportIcon from '@mui/icons-material/ContactSupport';\r\nimport QuizIcon from '@mui/icons-material/Quiz';\r\nimport WidgetsIcon from '@mui/icons-material/Widgets';\r\nimport BallotIcon from '@mui/icons-material/Ballot';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport image from \"../Images/admin.jpg\";\r\nimport styledt from 'styled-components';\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst TITLE = 'Personal'\r\n\r\nconst StyledBody = styledt.div`\r\n  background: url(${image});  \r\n  background-size: cover;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst drawerWidth = 280;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tbackgroundRepeat: 'no-repeat',\r\n\t\tbackgroundSize: 'auto',\r\n\t\tbackgroundPosition: 'center',\r\n\t\theight: '100vh',\r\n\t},\r\n\ttypography: {\r\n\t\tcolor: \"#000000\",\r\n\t\tfontFamily: 'Open Sans Condensed',\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"#000000\",\r\n\t\tfontSize: \"20em\"\r\n\t}\r\n\t  \r\n}));\r\n\r\n\r\nconst openedMixin = (theme) => ({\r\n\twidth: drawerWidth,\r\n\ttransition: theme.transitions.create('width', {\r\n\t\teasing: theme.transitions.easing.sharp,\r\n\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t}),\r\n\toverflowX: 'hidden',\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n\ttransition: theme.transitions.create('width', {\r\n\t\teasing: theme.transitions.easing.sharp,\r\n\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t}),\r\n\toverflowX: 'hidden',\r\n\twidth: `calc(${theme.spacing(7)} + 1px)`,\r\n\t[theme.breakpoints.up('sm')]: {\r\n\t\twidth: `calc(${theme.spacing(9)} + 1px)`,\r\n\t},\r\n});\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n\tdisplay: 'flex',\r\n\talignItems: 'center',\r\n\tjustifyContent: 'flex-end',\r\n\tpadding: theme.spacing(0, 1),\r\n\t// necessary for content to be below app bar\r\n\t...theme.mixins.toolbar,\r\n}));\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n\tshouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n\tzIndex: theme.zIndex.drawer + 1,\r\n\ttransition: theme.transitions.create(['width', 'margin'], {\r\n\t\teasing: theme.transitions.easing.sharp,\r\n\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t}),\r\n\t...(open && {\r\n\t\tmarginLeft: drawerWidth,\r\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t}),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n\t({ theme, open }) => ({\r\n\t\twidth: drawerWidth,\r\n\t\tflexShrink: 0,\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tboxSizing: 'border-box',\r\n\t\t...(open && {\r\n\t\t\t...openedMixin(theme),\r\n\t\t\t'& .MuiDrawer-paper': openedMixin(theme),\r\n\t\t}),\r\n\t\t...(!open && {\r\n\t\t\t...closedMixin(theme),\r\n\t\t\t'& .MuiDrawer-paper': closedMixin(theme),\r\n\t\t}),\r\n\t}),\r\n);\r\n\r\n\r\nexport default function Home() {\r\n\tconst theme = useTheme();\r\n\tconst [open, setOpen] = React.useState(false);\r\n\t//const [body, setBody] = useState({ username: Login.username, password: Login.password })\r\n\t//console.log(\"handleChange \"+ Login.username);\r\n\tconst classes = useStyles()\r\n\r\n\r\n\t\r\n\tconst handleSubmit = async (e) =>{\r\n\t\r\n        \r\n    };\r\n\r\n\r\n\tconst handleDrawerOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleDrawerClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledBody>\r\n\t\t<Helmet><title>{TITLE}</title> </Helmet>\r\n\t\t<Box sx={{ display: 'flex' }}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<AppBar position=\"fixed\" open={open} style={{ background: '#FFFFFF' }}>\r\n\t\t\t\t<Toolbar >\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.icons}\r\n\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\tonClick={handleDrawerOpen}\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tmarginRight: '36px',\r\n\t\t\t\t\t\t\t...(open && { display: 'none' }),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon style={{ color: '#606060'}}/>\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Typography variant=\"h5\" noWrap component=\"div\" className={classes.typography}>\r\n\t\t\t\t\t\tPersonal\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<Drawer variant=\"permanent\" open={open}>\r\n\t\t\t\t<DrawerHeader >\r\n\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\r\n\t\t\t\t\t\t{theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon style={{ color: '#000000'}}/>}\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</DrawerHeader>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<List className={classes.icon}>\r\n\t\t\t\t\t<ListItemButton onClick={(e) => handleSubmit(e)}>\r\n\t\t\t\t\t\t<ListItemIcon ><AccountCircleIcon className={classes.icon} /></ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary=\"Inscribir estudiantes\" /></ListItemButton>\r\n\t\t\t\t<ListItemButton>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<BallotIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText primary=\"Inscribirme en un curso\" />\r\n\t\t\t\t</ListItemButton>\r\n\t\t\t\t<ListItemButton>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<QuestionMarkIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText primary=\"Crear preguntas\" />\r\n\t\t\t\t</ListItemButton>\r\n                <ListItemButton>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<QuizIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText primary=\"Crear pruebas\" />\r\n\t\t\t\t</ListItemButton>\r\n                <ListItemButton>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<WidgetsIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText primary=\"Crear lista de opciones\" />\r\n\t\t\t\t</ListItemButton>\r\n\t\t\t\t<ListItemButton>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<LoginIcon className={classes.icon} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText primary=\"Cerrar sesión\" />\r\n\t\t\t\t</ListItemButton>\r\n\t\t\t\t</List>\r\n\t\t\t\t<Divider />\t\t\t\r\n\t\t\t</Drawer>\r\n\t\t</Box>\r\n\t\t</StyledBody>\r\n\t);\r\n}\r\n","C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Pages\\Admin.js",["55","56","57"],[],"\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport React, { useState } from 'react';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\n\r\nimport \"../Styles/Inventario/inventario.css\";\r\nimport \"../Styles/Inventario/App.css\";\r\nimport \"../Styles/Inventario/mediaProductos.css\";\r\n\r\nimport InputProducto from \"../Components/InputProducto.js\";\r\nimport ListProducto from \"../Components/ListProducto.js\";\r\n\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\r\nimport QuizIcon from '@mui/icons-material/Quiz';\r\nimport WidgetsIcon from '@mui/icons-material/Widgets';\r\nimport BallotIcon from '@mui/icons-material/Ballot';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport image from \"../Images/backa.jpg\";\r\nimport styledt from 'styled-components';\r\nimport { Helmet } from 'react-helmet'\r\nimport Container from \"@mui/material/Container\";\r\nimport Link from \"@mui/material/Link\";\r\n\r\nconst TITLE = 'Administrador'\r\n\r\nconst StyledBody = styledt.div`\r\n  background: url(${image});  \r\n  background-size: cover;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst drawerWidth = 280;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tbackgroundRepeat: 'no-repeat',\r\n\t\tbackgroundSize: 'auto',\r\n\t\tbackgroundPosition: 'center',\r\n\t\theight: '100vh',\r\n\t},\r\n\ttypography: {\r\n\t\tcolor: \"#000000\",\r\n\t\tborderColor: \"thistle\",\r\n\t\tfontFamily: 'Open Sans Condensed'\r\n\t},\r\n\ticons: {\r\n\t\tcolor: \"#000000\",\r\n\t\tfontSize: \"20em\"\r\n\t}\r\n\t  \r\n}));\r\n\r\n\r\nconst openedMixin = (theme) => ({\r\n\twidth: drawerWidth,\r\n\ttransition: theme.transitions.create('width', {\r\n\t\teasing: theme.transitions.easing.sharp,\r\n\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t}),\r\n\toverflowX: 'hidden',\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n\ttransition: theme.transitions.create('width', {\r\n\t\teasing: theme.transitions.easing.sharp,\r\n\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t}),\r\n\toverflowX: 'hidden',\r\n\twidth: `calc(${theme.spacing(7)} + 1px)`,\r\n\t[theme.breakpoints.up('sm')]: {\r\n\t\twidth: `calc(${theme.spacing(9)} + 1px)`,\r\n\t},\r\n});\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n\tdisplay: 'flex',\r\n\talignItems: 'center',\r\n\tjustifyContent: 'flex-end',\r\n\tpadding: theme.spacing(0, 1),\r\n\t// necessary for content to be below app bar\r\n\t...theme.mixins.toolbar,\r\n}));\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n\tshouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n\tzIndex: theme.zIndex.drawer + 1,\r\n\ttransition: theme.transitions.create(['width', 'margin'], {\r\n\t\teasing: theme.transitions.easing.sharp,\r\n\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t}),\r\n\t...(open && {\r\n\t\tmarginLeft: drawerWidth,\r\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t}),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n\t({ theme, open }) => ({\r\n\t\twidth: drawerWidth,\r\n\t\tflexShrink: 0,\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tboxSizing: 'border-box',\r\n\t\t...(open && {\r\n\t\t\t...openedMixin(theme),\r\n\t\t\t'& .MuiDrawer-paper': openedMixin(theme),\r\n\t\t}),\r\n\t\t...(!open && {\r\n\t\t\t...closedMixin(theme),\r\n\t\t\t'& .MuiDrawer-paper': closedMixin(theme),\r\n\t\t}),\r\n\t}),\r\n);\r\n\r\nfunction Copyright(props) {\r\n\treturn (\r\n\t  <Typography variant=\"body2\" color=\"common.white\" align=\"center\" {...props}>\r\n\t\t{\"Copyright © \"}\r\n\t\t<Link color=\"inherit\" href=\"https://mui.com/\">\r\n\t\t  Attendance\r\n\t\t</Link>{\" \"}\r\n\t\t{new Date().getFullYear()}\r\n\t\t{\".\"}\r\n\t  </Typography>\r\n\t);\r\n  }\r\n\r\nexport default function Home() {\r\n\tconst theme = useTheme();\r\n\tconst [open, setOpen] = React.useState(false);\r\n\t//const [body, setBody] = useState({ username: Login.username, password: Login.password })\r\n\t//console.log(\"handleChange \"+ Login.username);\r\n\tconst classes = useStyles()\r\n\r\n\r\n\t\r\n\tconst handleSubmit = async (e) =>{\r\n\t\r\n        \r\n    };\r\n\r\n\r\n\tconst handleDrawerOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleDrawerClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container component=\"main\" maxWidth=\"s\">\r\n\t\t<StyledBody>\r\n\t\t<Helmet><title>{TITLE}</title> </Helmet>\r\n\t\t<Box sx={{ display: 'flex' }}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<AppBar position=\"fixed\" open={open} style={{ background: '#FFFFFF' }}>\r\n\t\t\t\t<Toolbar >\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\tonClick={handleDrawerOpen}\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tmarginRight: '36px',\r\n\t\t\t\t\t\t\t...(open && { display: 'none' }),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon className={classes.icons}/>\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Typography variant=\"h5\" noWrap component=\"div\" className={classes.typography}>\r\n\t\t\t\t\t\tAdministrador\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<Drawer variant=\"permanent\" open={open}>\r\n\t\t\t\t<DrawerHeader >\r\n\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\r\n\t\t\t\t\t\t{theme.direction === 'rtl' ? <ChevronRightIcon style={{ color: '#000000' }} /> : <ChevronLeftIcon style={{ color: '#000000'}} />}\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</DrawerHeader>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<ListItemButton onClick={(e) => handleSubmit(e)}>\r\n\t\t\t\t\t\t<ListItemIcon ><AccountCircleIcon className={classes.icons} /></ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary=\"Crear curso\" /></ListItemButton>\r\n\t\t\t\t<ListItemButton>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<BallotIcon className={classes.icons}/>\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText primary=\"Agregar y ver personal\" />\r\n\t\t\t\t</ListItemButton>\r\n\t\t\t\t<ListItemButton>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<QuestionMarkIcon className={classes.icons}/>\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText primary=\"Agregar y ver estudiantes\" />\r\n\t\t\t\t</ListItemButton>\r\n\t\t\t\t<ListItemButton>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<LoginIcon className={classes.icons}/>\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText primary=\"Cerrar sesión\" />\r\n\t\t\t\t</ListItemButton>\r\n\t\t\t\t</List>\r\n\t\t\t\t<Divider />\t\t\r\n\t\t\t</Drawer>\r\n\t\t\t\r\n\t\t\t<div className=\"insertarD\">\r\n          \r\n        </div>\r\n\r\n        <section className=\"inventario\">\r\n          <InputProducto />\r\n          <ListProducto />\r\n        </section>\r\n\r\n\t\t</Box>\r\n\t\t</StyledBody>\r\n\t\t<Copyright sx={{ mt: 8, mb: 4 }} />\r\n\t\t</Container>\r\n\t);\r\n}\r\n","C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Pages\\Students.js",["58","59"],[],"\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport React, { useState } from 'react';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\r\nimport BallotIcon from '@mui/icons-material/Ballot';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../Styles/students.css';\r\nimport styledt from 'styled-components';\r\nimport image from \"../Images/std.png\";\r\nimport Swal from 'sweetalert2';\r\nimport { Helmet } from 'react-helmet'\r\n\r\n\r\nconst drawerWidth = 280;\r\n\r\nconst TITLE = 'Estudiantes'\r\n\r\nconst StyledBody = styledt.div`\r\n  background: url(${image});  \r\n  background-size: cover;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tbackgroundSize: 'auto',\r\n\t\tbackgroundPosition: 'center',\r\n\t\theight: '100vh',\r\n\t},\r\n\ttypography: {\r\n\t\tcolor: \"#0B1CAD\",\r\n\t\tfontFamily: 'Open Sans Condensed',\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"#0B1CAD\",\r\n\t\tfontSize: \"20em\"\r\n\t}\r\n\r\n}));\r\n\r\n\r\nconst openedMixin = (theme) => ({\r\n\twidth: drawerWidth,\r\n\ttransition: theme.transitions.create('width', {\r\n\t\teasing: theme.transitions.easing.sharp,\r\n\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t}),\r\n\toverflowX: 'hidden',\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n\ttransition: theme.transitions.create('width', {\r\n\t\teasing: theme.transitions.easing.sharp,\r\n\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t}),\r\n\toverflowX: 'hidden',\r\n\twidth: `calc(${theme.spacing(7)} + 1px)`,\r\n\t[theme.breakpoints.up('sm')]: {\r\n\t\twidth: `calc(${theme.spacing(9)} + 1px)`,\r\n\t},\r\n});\r\n\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n\tdisplay: 'flex',\r\n\talignItems: 'center',\r\n\tjustifyContent: 'flex-end',\r\n\tpadding: theme.spacing(0, 1),\r\n\t// necessary for content to be below app bar\r\n\t...theme.mixins.toolbar,\r\n}));\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n\tshouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n\tzIndex: theme.zIndex.drawer + 1,\r\n\ttransition: theme.transitions.create(['width', 'margin'], {\r\n\t\teasing: theme.transitions.easing.sharp,\r\n\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t}),\r\n\t...(open && {\r\n\t\tmarginLeft: drawerWidth,\r\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t}),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n\t({ theme, open }) => ({\r\n\t\twidth: drawerWidth,\r\n\t\tflexShrink: 0,\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tboxSizing: 'border-box',\r\n\t\t...(open && {\r\n\t\t\t...openedMixin(theme),\r\n\t\t\t'& .MuiDrawer-paper': openedMixin(theme),\r\n\t\t}),\r\n\t\t...(!open && {\r\n\t\t\t...closedMixin(theme),\r\n\t\t\t'& .MuiDrawer-paper': closedMixin(theme),\r\n\t\t}),\r\n\t}),\r\n);\r\n\r\n\r\nexport default function Students() {\r\n\tconst theme = useTheme();\r\n\tconst [open, setOpen] = React.useState(false);\r\n\t//const [body, setBody] = useState({ username: Login.username, password: Login.password })\r\n\t//console.log(\"handleChange \"+ Login.username);\r\n\tconst classes = useStyles()\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\r\n\r\n\t};\r\n\r\n\r\n\tconst handleDrawerOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst proof = () => {\r\n\t\tSwal.fire({\r\n\t\t\ttitle: 'Codigo del curso',\r\n\t\t\tinput: 'text',\r\n\t\t\tinputAttributes: {\r\n\t\t\t  autocapitalize: 'off'\r\n\t\t\t},\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonText: 'Aceptar',\r\n\t\t\tshowLoaderOnConfirm: true,\r\n\t\t\tpreConfirm: (login) => {\r\n\t\t\t  return fetch(`//api.github.com/users/${login}`)\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t  if (!response.ok) {\r\n\t\t\t\t\tthrow new Error(response.statusText)\r\n\t\t\t\t  }\r\n\t\t\t\t  return response.json()\r\n\t\t\t\t  \r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t  Swal.showValidationMessage(\r\n\t\t\t\t\t`Request failed: ${error}`\r\n\t\t\t\t  )\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tallowOutsideClick: () => !Swal.isLoading()\r\n\t\t  }).then((result) => {\r\n\t\t\tif (result.isConfirmed) {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: 'Escoge un tipo de pregunta',\r\n\t\t\t\t\tshowDenyButton: true,\r\n\t\t\t\t\tshowConfirmButton: true,\r\n\t\t\t\t\tconfirmButtonColor: '#3141E3 ',\r\n\t\t\t\t\tdenyButtonColor: '#6BE85A',\r\n\t\t\t\t\tdenyButtonText: `Multiple o F/V`,\r\n\t\t\t\t\tconfirmButtonText: 'Abierta'\r\n\t\t\t\t  }).then(response => {\r\n\t\t\t\t\tif(response.isDismissed == true){\r\n\t\t\t\t\t\tproof();\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.log(\"false \",response, \"result \", result);\r\n\t\t\t\t\t\t//choosenOp();\r\n\t\t\t\t\t}\r\n\t\t\t\t  })\r\n\t\t\t\t   \r\n\t\t\t}else{\r\n\t\t\t\tconsole.log(\"true \");\r\n\t\t\t\tproof();\r\n\t\t\t}\r\n\t\t  })\r\n\r\n\t};\r\n\r\n\tconst handleDrawerClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledBody>\r\n\t\t\t<Helmet><title>{TITLE}</title> </Helmet>\r\n\t\t\t<Box sx={{ display: 'flex' }} >\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<AppBar position=\"fixed\" open={open} >\r\n\t\t\t\t\t<Toolbar style={{ background: '#FFFFFF' }}>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\t\tonClick={handleDrawerOpen}\r\n\t\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tmarginRight: '36px',\r\n\t\t\t\t\t\t\t\t...(open && { display: 'none' }),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuIcon style={{ color: '#0B1CAD' }} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<Typography variant=\"h5\" noWrap component=\"div\" className={classes.typography}>\r\n\t\t\t\t\t\t\tEstudiantes\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<Drawer variant=\"permanent\" open={open} >\r\n\t\t\t\t\t<DrawerHeader >\r\n\t\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\r\n\t\t\t\t\t\t\t{theme.direction === 'rtl' ? <ChevronRightIcon style={{ color: '#0B1CAD' }} /> : <ChevronLeftIcon style={{ color: '#0B1CAD' }} />}\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</DrawerHeader>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t<List className={classes.icon} >\r\n\t\t\t\t\t\t<ListItemButton onClick={(e) => handleSubmit(e)}>\r\n\t\t\t\t\t\t\t<ListItemIcon ><AccountCircleIcon className={classes.icon} /></ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText primary=\"Administrar perfil\" /></ListItemButton>\r\n\t\t\t\t\t\t<ListItemButton>\r\n\t\t\t\t\t\t\t<ListItemIcon >\r\n\t\t\t\t\t\t\t\t<BallotIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText primary=\"Informes de asistencia\" />\r\n\t\t\t\t\t\t</ListItemButton>\r\n\t\t\t\t\t\t<ListItemButton>\r\n\t\t\t\t\t\t\t<ListItemIcon >\r\n\t\t\t\t\t\t\t\t<QuestionMarkIcon \r\n\t\t\t\t\t\t\t\tonClick={proof}\r\n\t\t\t\t\t\t\t\tclassName={classes.icon} />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText \r\n\t\t\t\t\t\t\tonClick={proof}\r\n\t\t\t\t\t\t\tprimary=\"Marcar asistencia\" />\r\n\t\t\t\t\t\t</ListItemButton>\r\n\t\t\t\t\t\t<ListItemButton>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<LoginIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText primary=\"Cerrar sesión\" />\r\n\t\t\t\t\t\t</ListItemButton>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t</Drawer>\r\n\t\t\t</Box>\r\n\t\t</StyledBody>\r\n\t);\r\n}\r\n","C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Components\\ListProducto.js",["60"],[],"C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Components\\InputProducto.js",["61","62"],[],"C:\\Users\\DJ\\ProyectBD\\frontend\\src\\Components\\EditProducto.js",[],[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":17,"nodeType":"69","messageId":"70","endLine":3,"endColumn":25},{"ruleId":"67","severity":1,"message":"71","line":16,"column":8,"nodeType":"69","messageId":"70","endLine":16,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":3,"column":17,"nodeType":"69","messageId":"70","endLine":3,"endColumn":25},{"ruleId":"67","severity":1,"message":"72","line":24,"column":8,"nodeType":"69","messageId":"70","endLine":24,"endColumn":16},{"ruleId":"67","severity":1,"message":"73","line":25,"column":8,"nodeType":"69","messageId":"70","endLine":25,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":3,"column":17,"nodeType":"69","messageId":"70","endLine":3,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":187,"column":30,"nodeType":"76","messageId":"77","endLine":187,"endColumn":32},{"ruleId":"67","severity":1,"message":"78","line":27,"column":13,"nodeType":"69","messageId":"70","endLine":27,"endColumn":17},{"ruleId":"67","severity":1,"message":"79","line":44,"column":18,"nodeType":"69","messageId":"70","endLine":44,"endColumn":27},{"ruleId":"67","severity":1,"message":"78","line":50,"column":11,"nodeType":"69","messageId":"70","endLine":50,"endColumn":15},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ContactSupportIcon' is defined but never used.","'QuizIcon' is defined but never used.","'WidgetsIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'dato' is assigned a value but never used.","'setNombre' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]